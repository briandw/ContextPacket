[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "contextpacket"
version = "0.1.0"
description = "Document chunking and context creation pipeline with cross-encoder scoring"
authors = [
    {name = "ContextPacket Team"},
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.11"
keywords = ["nlp", "document-processing", "chunking", "cross-encoder", "information-retrieval"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Text Processing :: Linguistic",
]

dependencies = [
    "pydantic>=2.0.0",
    "PyYAML>=6.0.0", 
    "tiktoken>=0.10.0",
    "python-dotenv>=1.0.0",
    "PyMuPDF>=1.24.0",
    "beautifulsoup4>=4.12.0",
    "mxbai-rerank>=0.1.0",
]

[project.optional-dependencies]
sentence-transformers = ["sentence-transformers>=2.0.0"]
dev = [
    "ruff>=0.12.0",
    "mypy>=1.0.0",
    "types-PyYAML>=6.0.0",
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
]

[project.scripts]
contextpacket = "context_packet.cli:main"

[project.urls]
Homepage = "https://github.com/briandw/ContextPacket"
Repository = "https://github.com/briandw/ContextPacket"

[tool.setuptools.packages.find]
where = ["."]
include = ["context_packet*"]

[tool.ruff]
target-version = "py311"
line-length = 120

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by line-length
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "fitz",
    "fitz.*",
    "pytesseract",
    "pytesseract.*",
    "mxbai_rerank",
    "mxbai_rerank.*",
    "sentence_transformers",
    "sentence_transformers.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=context_packet",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
